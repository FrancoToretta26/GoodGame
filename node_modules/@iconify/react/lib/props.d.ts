import type { SVGProps, RefAttributes } from 'react';
import type { IconifyIcon } from '@iconify/types';
import type { IconifyIconCustomisations as RawIconCustomisations } from '@iconify/utils/lib/customisations';
export { RawIconCustomisations };
/**
 * Icon customisations
 */
export declare type IconifyIconCustomisations = Omit<RawIconCustomisations, 'rotate'> & {
    rotate?: string | number;
};
/**
 * Callback for when icon has been loaded (only triggered for icons loaded from API)
 */
export declare type IconifyIconOnLoad = (name: string) => void;
/**
 * Icon properties
 */
export interface IconifyIconProps extends IconifyIconCustomisations {
    icon: IconifyIcon | string;
    color?: string;
    flip?: string;
    align?: string;
    id?: string;
    onLoad?: IconifyIconOnLoad;
}
/**
 * React component properties: generic element for Icon component, SVG for generated component
 */
declare type IconifyElementProps = SVGProps<SVGSVGElement>;
export declare type IconRef = RefAttributes<SVGSVGElement>;
export interface ReactRefProp {
    ref?: IconRef;
}
/**
 * Mix of icon properties and SVGSVGElement properties
 */
export declare type IconProps = IconifyElementProps & IconifyIconProps & ReactRefProp;
