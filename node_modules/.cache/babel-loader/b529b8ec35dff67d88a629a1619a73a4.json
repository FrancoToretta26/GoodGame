{"ast":null,"code":"import _objectSpread from\"C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import{useState}from'react';import{Icon}from'@iconify/react';import{useFormik,Form,FormikProvider}from'formik';import eyeFill from'@iconify/icons-eva/eye-fill';import eyeOffFill from'@iconify/icons-eva/eye-off-fill';import{useNavigate}from'react-router-dom';// material\nimport{Stack,TextField,IconButton,InputAdornment}from'@mui/material';import{LoadingButton}from'@mui/lab';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RegisterForm(){var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var RegisterSchema=Yup.object().shape({firstName:Yup.string().min(2,'Too Short!').max(50,'Too Long!').required('First name required'),lastName:Yup.string().min(2,'Too Short!').max(50,'Too Long!').required('Last name required'),email:Yup.string().email('Email must be a valid email address').required('Email is required'),password:Yup.string().required('Password is required')});var formik=useFormik({initialValues:{firstName:'',lastName:'',email:'',password:''},validationSchema:RegisterSchema,onSubmit:function onSubmit(){navigate('/dashboard',{replace:true});}});var errors=formik.errors,touched=formik.touched,handleSubmit=formik.handleSubmit,isSubmitting=formik.isSubmitting,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:2,children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"First name\"},getFieldProps('firstName')),{},{error:Boolean(touched.firstName&&errors.firstName),helperText:touched.firstName&&errors.firstName})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Last name\"},getFieldProps('lastName')),{},{error:Boolean(touched.lastName&&errors.lastName),helperText:touched.lastName&&errors.lastName}))]}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"username\",type:\"email\",label:\"Email address\"},getFieldProps('email')),{},{error:Boolean(touched.email&&errors.email),helperText:touched.email&&errors.email})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"current-password\",type:showPassword?'text':'password',label:\"Password\"},getFieldProps('password')),{},{InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:function onClick(){return setShowPassword(function(prev){return!prev;});},children:/*#__PURE__*/_jsx(Icon,{icon:showPassword?eyeFill:eyeOffFill})})})},error:Boolean(touched.password&&errors.password),helperText:touched.password&&errors.password})),/*#__PURE__*/_jsx(LoadingButton,{fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Register\"})]})})});}","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/components/authentication/register/RegisterForm.js"],"names":["Yup","useState","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","RegisterForm","navigate","showPassword","setShowPassword","RegisterSchema","object","shape","firstName","string","min","max","required","lastName","email","password","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","handleSubmit","isSubmitting","getFieldProps","xs","sm","Boolean","endAdornment","prev"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('First name required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate('/dashboard', { replace: true });\n    }\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"First name\"\n              {...getFieldProps('firstName')}\n              error={Boolean(touched.firstName && errors.firstName)}\n              helperText={touched.firstName && errors.firstName}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Last name\"\n              {...getFieldProps('lastName')}\n              error={Boolean(touched.lastName && errors.lastName)}\n              helperText={touched.lastName && errors.lastName}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n          >\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}