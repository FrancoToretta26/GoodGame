{"ast":null,"code":"var trigger;\nvar callbacks = [];\n\nvar notify = function () {\n  return callbacks.splice(0).forEach(function (cb) {\n    return cb();\n  });\n};\n\nvar queueMicroTask = function (callback) {\n  if (!trigger) {\n    var toggle_1 = 0;\n    var el_1 = document.createTextNode('');\n    var config = {\n      characterData: true\n    };\n    new MutationObserver(function () {\n      return notify();\n    }).observe(el_1, config);\n\n    trigger = function () {\n      el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++);\n    };\n  }\n\n  callbacks.push(callback);\n  trigger();\n};\n\nexport { queueMicroTask };","map":{"version":3,"sources":["C:/Users/feder/dashboard-Grupo7SEM/node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js"],"names":["trigger","callbacks","notify","splice","forEach","cb","queueMicroTask","callback","toggle_1","el_1","document","createTextNode","config","characterData","MutationObserver","observe","textContent","push"],"mappings":"AAAA,IAAIA,OAAJ;AACA,IAAIC,SAAS,GAAG,EAAhB;;AACA,IAAIC,MAAM,GAAG,YAAY;AAAE,SAAOD,SAAS,CAACE,MAAV,CAAiB,CAAjB,EAAoBC,OAApB,CAA4B,UAAUC,EAAV,EAAc;AAAE,WAAOA,EAAE,EAAT;AAAc,GAA1D,CAAP;AAAqE,CAAhG;;AACA,IAAIC,cAAc,GAAG,UAAUC,QAAV,EAAoB;AACrC,MAAI,CAACP,OAAL,EAAc;AACV,QAAIQ,QAAQ,GAAG,CAAf;AACA,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,EAAxB,CAAX;AACA,QAAIC,MAAM,GAAG;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AACA,QAAIC,gBAAJ,CAAqB,YAAY;AAAE,aAAOZ,MAAM,EAAb;AAAkB,KAArD,EAAuDa,OAAvD,CAA+DN,IAA/D,EAAqEG,MAArE;;AACAZ,IAAAA,OAAO,GAAG,YAAY;AAAES,MAAAA,IAAI,CAACO,WAAL,GAAmB,MAAMR,QAAQ,GAAGA,QAAQ,EAAX,GAAgBA,QAAQ,EAAtC,CAAnB;AAA+D,KAAvF;AACH;;AACDP,EAAAA,SAAS,CAACgB,IAAV,CAAeV,QAAf;AACAP,EAAAA,OAAO;AACV,CAVD;;AAWA,SAASM,cAAT","sourcesContent":["var trigger;\r\nvar callbacks = [];\r\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\r\nvar queueMicroTask = function (callback) {\r\n    if (!trigger) {\r\n        var toggle_1 = 0;\r\n        var el_1 = document.createTextNode('');\r\n        var config = { characterData: true };\r\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\r\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\r\n    }\r\n    callbacks.push(callback);\r\n    trigger();\r\n};\r\nexport { queueMicroTask };\r\n"]},"metadata":{},"sourceType":"module"}