{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\OneDrive\\\\Documentos\\\\GitHub\\\\material-kit-react-main\\\\src\\\\tester\\\\components\\\\Scrollbar.js\";\nimport PropTypes from 'prop-types';\nimport SimpleBarReact from 'simplebar-react'; // material\n\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden'\n});\nconst SimpleBarStyle = styled(SimpleBarReact)(({\n  theme\n}) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48)\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1\n    }\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit'\n  }\n})); // ----------------------------------------------------------------------\n\nScrollbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  sx: PropTypes.object\n};\nexport default function Scrollbar({\n  children,\n  sx,\n  ...other\n}) {\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n  if (isMobile) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: 'auto',\n        ...sx\n      },\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    children: /*#__PURE__*/_jsxDEV(SimpleBarStyle, {\n      timeout: 500,\n      clickOnTrack: false,\n      sx: sx,\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = Scrollbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scrollbar\");","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/tester/components/Scrollbar.js"],"names":["PropTypes","SimpleBarReact","alpha","styled","Box","RootStyle","flexGrow","height","overflow","SimpleBarStyle","theme","maxHeight","backgroundColor","palette","grey","opacity","width","zIndex","Scrollbar","propTypes","children","node","isRequired","sx","object","other","isMobile","test","navigator","userAgent","overflowX"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;AACA,SAASC,GAAT,QAAoB,eAApB,C,CAEA;;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAAC,KAAD,CAAN,CAAc;AAC9BG,EAAAA,QAAQ,EAAE,CADoB;AAE9BC,EAAAA,MAAM,EAAE,MAFsB;AAG9BC,EAAAA,QAAQ,EAAE;AAHoB,CAAd,CAAlB;AAMA,MAAMC,cAAc,GAAGN,MAAM,CAACF,cAAD,CAAN,CAAuB,CAAC;AAAES,EAAAA;AAAF,CAAD,MAAgB;AAC5DC,EAAAA,SAAS,EAAE,MADiD;AAE5D,4BAA0B;AACxB,gBAAY;AACVC,MAAAA,eAAe,EAAEV,KAAK,CAACQ,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAD,EAA0B,IAA1B;AADZ,KADY;AAIxB,kCAA8B;AAC5BC,MAAAA,OAAO,EAAE;AADmB;AAJN,GAFkC;AAU5D,2CAAyC;AACvCC,IAAAA,KAAK,EAAE;AADgC,GAVmB;AAa5D,kEAAgE;AAC9DT,IAAAA,MAAM,EAAE;AADsD,GAbJ;AAgB5D,uBAAqB;AACnBU,IAAAA,MAAM,EAAE;AADW;AAhBuC,CAAhB,CAAvB,CAAvB,C,CAqBA;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB,IAAV,CAAeC,UADL;AAEpBC,EAAAA,EAAE,EAAEvB,SAAS,CAACwB;AAFM,CAAtB;AAKA,eAAe,SAASN,SAAT,CAAmB;AAAEE,EAAAA,QAAF;AAAYG,EAAAA,EAAZ;AAAgB,KAAGE;AAAnB,CAAnB,EAA+C;AAC5D,QAAMC,QAAQ,GAAG,iEAAiEC,IAAjE,CACfC,SAAS,CAACC,SADK,CAAjB;;AAIA,MAAIH,QAAJ,EAAc;AACZ,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEI,QAAAA,SAAS,EAAE,MAAb;AAAqB,WAAGP;AAAxB,OAAT;AAAA,SAA2CE,KAA3C;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,GAAzB;AAA8B,MAAA,YAAY,EAAE,KAA5C;AAAmD,MAAA,EAAE,EAAEG,EAAvD;AAAA,SAA+DE,KAA/D;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KApBuBF,S","sourcesContent":["import PropTypes from 'prop-types';\nimport SimpleBarReact from 'simplebar-react';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden'\n});\n\nconst SimpleBarStyle = styled(SimpleBarReact)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48)\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1\n    }\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nScrollbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  sx: PropTypes.object\n};\n\nexport default function Scrollbar({ children, sx, ...other }) {\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <RootStyle>\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </SimpleBarStyle>\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}