{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\OneDrive\\\\Documentos\\\\GitHub\\\\material-kit-react-main\\\\src\\\\layouts\\\\dashboard\\\\NotificationsPopover.js\",\n    _s = $RefreshSig$();\n\nimport faker from 'faker';\nimport PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { set, sub, formatDistanceToNow } from 'date-fns';\nimport { Icon } from '@iconify/react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport clockFill from '@iconify/icons-eva/clock-fill';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill'; // material\n\nimport { alpha } from '@mui/material/styles';\nimport { Box, List, Badge, Button, Avatar, Tooltip, Divider, IconButton, Typography, ListItemText, ListSubheader, ListItemAvatar, ListItemButton } from '@mui/material'; // utils\n\nimport { mockImgAvatar } from '../../utils/mockImages'; // components\n\nimport Scrollbar from '../../components/Scrollbar';\nimport MenuPopover from '../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NOTIFICATIONS = [{\n  id: faker.datatype.uuid(),\n  title: 'Your order is placed',\n  description: 'waiting for shipping',\n  avatar: null,\n  type: 'order_placed',\n  createdAt: set(new Date(), {\n    hours: 10,\n    minutes: 30\n  }),\n  isUnRead: true\n}, {\n  id: faker.datatype.uuid(),\n  title: faker.name.findName(),\n  description: 'answered to your comment on the Minimal',\n  avatar: mockImgAvatar(2),\n  type: 'friend_interactive',\n  createdAt: sub(new Date(), {\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: true\n}, {\n  id: faker.datatype.uuid(),\n  title: 'You have new message',\n  description: '5 unread messages',\n  avatar: null,\n  type: 'chat_message',\n  createdAt: sub(new Date(), {\n    days: 1,\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: false\n}, {\n  id: faker.datatype.uuid(),\n  title: 'You have new mail',\n  description: 'sent from Guido Padberg',\n  avatar: null,\n  type: 'mail',\n  createdAt: sub(new Date(), {\n    days: 2,\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: false\n}, {\n  id: faker.datatype.uuid(),\n  title: 'Delivery processing',\n  description: 'Your order is being shipped',\n  avatar: null,\n  type: 'order_shipped',\n  createdAt: sub(new Date(), {\n    days: 3,\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: false\n}];\n\nfunction renderContent(notification) {\n  const title = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"subtitle2\",\n    children: [notification.title, /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      sx: {\n        color: 'text.secondary'\n      },\n      children: [\"\\xA0 \", noCase(notification.description)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_package.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_shipping.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'mail') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_mail.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_chat.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  return {\n    avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: notification.title,\n      src: notification.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this),\n    title\n  };\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object.isRequired\n};\n\nfunction NotificationItem({\n  notification\n}) {\n  const {\n    avatar,\n    title\n  } = renderContent(notification);\n  return /*#__PURE__*/_jsxDEV(ListItemButton, {\n    to: \"#\",\n    disableGutters: true,\n    component: RouterLink,\n    sx: {\n      py: 1.5,\n      px: 2.5,\n      mt: '1px',\n      ...(notification.isUnRead && {\n        bgcolor: 'action.selected'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'background.neutral'\n        },\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: title,\n      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          mt: 0.5,\n          display: 'flex',\n          alignItems: 'center',\n          color: 'text.disabled'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: Icon,\n          icon: clockFill,\n          sx: {\n            mr: 0.5,\n            width: 16,\n            height: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), formatDistanceToNow(new Date(notification.createdAt))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NotificationItem;\nexport default function NotificationsPopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(NOTIFICATIONS);\n  const totalUnRead = notifications.filter(item => item.isUnRead === true).length;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(notifications.map(notification => ({ ...notification,\n      isUnRead: false\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      ref: anchorRef,\n      size: \"large\",\n      color: open ? 'primary' : 'default',\n      onClick: handleOpen,\n      sx: { ...(open && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: totalUnRead,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: bellFill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 360\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          py: 2,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: [\"You have \", totalUnRead, \" unread messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), totalUnRead > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \" Mark all as read\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            onClick: handleMarkAllAsRead,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: doneAllFill,\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        sx: {\n          height: {\n            xs: 340,\n            sm: 'auto'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(0, 2).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"Before that\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(2, 5).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disableRipple: true,\n          component: RouterLink,\n          to: \"#\",\n          children: \"View All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NotificationsPopover, \"XXkL7JuYe66+mtKw1h6eDMDaHhc=\");\n\n_c2 = NotificationsPopover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationItem\");\n$RefreshReg$(_c2, \"NotificationsPopover\");","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/layouts/dashboard/NotificationsPopover.js"],"names":["faker","PropTypes","noCase","useRef","useState","Link","RouterLink","set","sub","formatDistanceToNow","Icon","bellFill","clockFill","doneAllFill","alpha","Box","List","Badge","Button","Avatar","Tooltip","Divider","IconButton","Typography","ListItemText","ListSubheader","ListItemAvatar","ListItemButton","mockImgAvatar","Scrollbar","MenuPopover","NOTIFICATIONS","id","datatype","uuid","title","description","avatar","type","createdAt","Date","hours","minutes","isUnRead","name","findName","days","renderContent","notification","color","NotificationItem","propTypes","object","isRequired","py","px","mt","bgcolor","display","alignItems","mr","width","height","NotificationsPopover","anchorRef","open","setOpen","notifications","setNotifications","totalUnRead","filter","item","length","handleOpen","handleClose","handleMarkAllAsRead","map","theme","palette","primary","main","action","focusOpacity","current","flexGrow","xs","sm","typography","slice","p"],"mappings":"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","sourcesContent":["import faker from 'faker';\nimport PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { set, sub, formatDistanceToNow } from 'date-fns';\nimport { Icon } from '@iconify/react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport clockFill from '@iconify/icons-eva/clock-fill';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\n// material\nimport { alpha } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Badge,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  IconButton,\n  Typography,\n  ListItemText,\n  ListSubheader,\n  ListItemAvatar,\n  ListItemButton\n} from '@mui/material';\n// utils\nimport { mockImgAvatar } from '../../utils/mockImages';\n// components\nimport Scrollbar from '../../components/Scrollbar';\nimport MenuPopover from '../../components/MenuPopover';\n\n// ----------------------------------------------------------------------\n\nconst NOTIFICATIONS = [\n  {\n    id: faker.datatype.uuid(),\n    title: 'Your order is placed',\n    description: 'waiting for shipping',\n    avatar: null,\n    type: 'order_placed',\n    createdAt: set(new Date(), { hours: 10, minutes: 30 }),\n    isUnRead: true\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: faker.name.findName(),\n    description: 'answered to your comment on the Minimal',\n    avatar: mockImgAvatar(2),\n    type: 'friend_interactive',\n    createdAt: sub(new Date(), { hours: 3, minutes: 30 }),\n    isUnRead: true\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: 'You have new message',\n    description: '5 unread messages',\n    avatar: null,\n    type: 'chat_message',\n    createdAt: sub(new Date(), { days: 1, hours: 3, minutes: 30 }),\n    isUnRead: false\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: 'You have new mail',\n    description: 'sent from Guido Padberg',\n    avatar: null,\n    type: 'mail',\n    createdAt: sub(new Date(), { days: 2, hours: 3, minutes: 30 }),\n    isUnRead: false\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: 'Delivery processing',\n    description: 'Your order is being shipped',\n    avatar: null,\n    type: 'order_shipped',\n    createdAt: sub(new Date(), { days: 3, hours: 3, minutes: 30 }),\n    isUnRead: false\n  }\n];\n\nfunction renderContent(notification) {\n  const title = (\n    <Typography variant=\"subtitle2\">\n      {notification.title}\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\n        &nbsp; {noCase(notification.description)}\n      </Typography>\n    </Typography>\n  );\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_package.svg\" />,\n      title\n    };\n  }\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_shipping.svg\" />,\n      title\n    };\n  }\n  if (notification.type === 'mail') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_mail.svg\" />,\n      title\n    };\n  }\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_chat.svg\" />,\n      title\n    };\n  }\n  return {\n    avatar: <img alt={notification.title} src={notification.avatar} />,\n    title\n  };\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object.isRequired\n};\n\nfunction NotificationItem({ notification }) {\n  const { avatar, title } = renderContent(notification);\n\n  return (\n    <ListItemButton\n      to=\"#\"\n      disableGutters\n      component={RouterLink}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        mt: '1px',\n        ...(notification.isUnRead && {\n          bgcolor: 'action.selected'\n        })\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={title}\n        secondary={\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              display: 'flex',\n              alignItems: 'center',\n              color: 'text.disabled'\n            }}\n          >\n            <Box component={Icon} icon={clockFill} sx={{ mr: 0.5, width: 16, height: 16 }} />\n            {formatDistanceToNow(new Date(notification.createdAt))}\n          </Typography>\n        }\n      />\n    </ListItemButton>\n  );\n}\n\nexport default function NotificationsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(NOTIFICATIONS);\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(\n      notifications.map((notification) => ({\n        ...notification,\n        isUnRead: false\n      }))\n    );\n  };\n\n  return (\n    <>\n      <IconButton\n        ref={anchorRef}\n        size=\"large\"\n        color={open ? 'primary' : 'default'}\n        onClick={handleOpen}\n        sx={{\n          ...(open && {\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n          })\n        }}\n      >\n        <Badge badgeContent={totalUnRead} color=\"error\">\n          <Icon icon={bellFill} width={20} height={20} />\n        </Badge>\n      </IconButton>\n\n      <MenuPopover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        sx={{ width: 360 }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\">Notifications</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              You have {totalUnRead} unread messages\n            </Typography>\n          </Box>\n\n          {totalUnRead > 0 && (\n            <Tooltip title=\" Mark all as read\">\n              <IconButton color=\"primary\" onClick={handleMarkAllAsRead}>\n                <Icon icon={doneAllFill} width={20} height={20} />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Box>\n\n        <Divider />\n\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                New\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(0, 2).map((notification) => (\n              <NotificationItem key={notification.id} notification={notification} />\n            ))}\n          </List>\n\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                Before that\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(2, 5).map((notification) => (\n              <NotificationItem key={notification.id} notification={notification} />\n            ))}\n          </List>\n        </Scrollbar>\n\n        <Divider />\n\n        <Box sx={{ p: 1 }}>\n          <Button fullWidth disableRipple component={RouterLink} to=\"#\">\n            View All\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}