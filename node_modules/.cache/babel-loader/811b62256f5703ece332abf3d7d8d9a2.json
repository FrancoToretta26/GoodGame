{"ast":null,"code":"import faker from 'faker';\nimport { sample } from 'lodash'; // utils\n\nimport { mockImgCover } from '../utils/mockImages'; // ----------------------------------------------------------------------\n\nconst PRODUCT_NAME = ['Game Testing', 'Game Feedback', 'Bug Bounty'];\nconst PRODUCT_LINK = ['user', '', ''];\nconst PRODUCT_COLOR = ['#00AB55', '#000000', '#FFFFFF', '#FFC0CB', '#FF4842', '#1890FF', '#94D82D', '#FFC107']; // ----------------------------------------------------------------------\n\nconst products = [...Array(3)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: faker.datatype.uuid(),\n    cover: mockImgCover(setIndex),\n    name: PRODUCT_NAME[index],\n    price: faker.datatype.number({\n      min: 0,\n      max: 500,\n      precision: 0.01\n    }),\n    colors: setIndex === 1 && PRODUCT_COLOR.slice(0, 2) || setIndex === 2 && PRODUCT_COLOR.slice(1, 3) || setIndex === 3 && PRODUCT_COLOR.slice(2, 4) || setIndex === 4 && PRODUCT_COLOR.slice(3, 6) || setIndex === 23 && PRODUCT_COLOR.slice(4, 6) || setIndex === 24 && PRODUCT_COLOR.slice(5, 6) || PRODUCT_COLOR,\n    status: sample(['Unfinished', 'Finished', '', ''])\n  };\n});\nexport default products;","map":{"version":3,"sources":["C:/Users/feder/dashboard-Grupo7SEM/src/_mocks_/TipodeTesting.js"],"names":["faker","sample","mockImgCover","PRODUCT_NAME","PRODUCT_LINK","PRODUCT_COLOR","products","Array","map","_","index","setIndex","id","datatype","uuid","cover","name","price","number","min","max","precision","colors","slice","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,qBAA7B,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CAAC,cAAD,EAAiB,eAAjB,EAAkC,YAAlC,CAArB;AAEA,MAAMC,YAAY,GAAG,CAAC,MAAD,EAAQ,EAAR,EAAW,EAAX,CAArB;AAEA,MAAMC,aAAa,GAAG,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB,EAMpB,SANoB,EAOpB,SAPoB,EAQpB,SARoB,CAAtB,C,CAWA;;AAEA,MAAMC,QAAQ,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/C,QAAMC,QAAQ,GAAGD,KAAK,GAAG,CAAzB;AAEA,SAAO;AACLE,IAAAA,EAAE,EAAEZ,KAAK,CAACa,QAAN,CAAeC,IAAf,EADC;AAELC,IAAAA,KAAK,EAAEb,YAAY,CAACS,QAAD,CAFd;AAGLK,IAAAA,IAAI,EAAEb,YAAY,CAACO,KAAD,CAHb;AAILO,IAAAA,KAAK,EAAEjB,KAAK,CAACa,QAAN,CAAeK,MAAf,CAAsB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE,GAAf;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAtB,CAJF;AAKLC,IAAAA,MAAM,EACHX,QAAQ,KAAK,CAAb,IAAkBN,aAAa,CAACkB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAnB,IACCZ,QAAQ,KAAK,CAAb,IAAkBN,aAAa,CAACkB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CADnB,IAECZ,QAAQ,KAAK,CAAb,IAAkBN,aAAa,CAACkB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAFnB,IAGCZ,QAAQ,KAAK,CAAb,IAAkBN,aAAa,CAACkB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAHnB,IAICZ,QAAQ,KAAK,EAAb,IAAmBN,aAAa,CAACkB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAJpB,IAKCZ,QAAQ,KAAK,EAAb,IAAmBN,aAAa,CAACkB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CALpB,IAMAlB,aAZG;AAaLmB,IAAAA,MAAM,EAAEvB,MAAM,CAAC,CAAC,YAAD,EAAe,UAAf,EAA2B,EAA3B,EAA+B,EAA/B,CAAD;AAbT,GAAP;AAeD,CAlBgB,CAAjB;AAoBA,eAAeK,QAAf","sourcesContent":["import faker from 'faker';\r\nimport { sample } from 'lodash';\r\n// utils\r\nimport { mockImgCover } from '../utils/mockImages';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PRODUCT_NAME = ['Game Testing', 'Game Feedback', 'Bug Bounty'];\r\n\r\nconst PRODUCT_LINK = ['user','','']\r\n\r\nconst PRODUCT_COLOR = [\r\n  '#00AB55',\r\n  '#000000',\r\n  '#FFFFFF',\r\n  '#FFC0CB',\r\n  '#FF4842',\r\n  '#1890FF',\r\n  '#94D82D',\r\n  '#FFC107'\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst products = [...Array(3)].map((_, index) => {\r\n  const setIndex = index + 1;\r\n\r\n  return {\r\n    id: faker.datatype.uuid(),\r\n    cover: mockImgCover(setIndex),\r\n    name: PRODUCT_NAME[index],\r\n    price: faker.datatype.number({ min: 0, max: 500, precision: 0.01 }),\r\n    colors:\r\n      (setIndex === 1 && PRODUCT_COLOR.slice(0, 2)) ||\r\n      (setIndex === 2 && PRODUCT_COLOR.slice(1, 3)) ||\r\n      (setIndex === 3 && PRODUCT_COLOR.slice(2, 4)) ||\r\n      (setIndex === 4 && PRODUCT_COLOR.slice(3, 6)) ||\r\n      (setIndex === 23 && PRODUCT_COLOR.slice(4, 6)) ||\r\n      (setIndex === 24 && PRODUCT_COLOR.slice(5, 6)) ||\r\n      PRODUCT_COLOR,\r\n    status: sample(['Unfinished', 'Finished', '', ''])\r\n  };\r\n});\r\n\r\nexport default products;\r\n"]},"metadata":{},"sourceType":"module"}