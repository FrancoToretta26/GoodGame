{"ast":null,"code":"import faker from 'faker';\nimport { sample } from 'lodash'; // utils\n\nimport { mockImgProduct } from '../utils/mockImages'; // ----------------------------------------------------------------------\n\nconst PRODUCT_NAME = ['Game Testing', 'Game Feedback', 'Bug Bounty'];\nconst PRODUCT_COLOR = ['#00AB55', '#000000', '#FFFFFF', '#FFC0CB', '#FF4842', '#1890FF', '#94D82D', '#FFC107']; // ----------------------------------------------------------------------\n\nconst products = [...Array(3)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: faker.datatype.uuid(),\n    cover: mockImgProduct(setIndex),\n    name: PRODUCT_NAME[index],\n    price: faker.datatype.number({\n      min: 0,\n      max: 99,\n      precision: 0.01\n    }),\n    priceSale: setIndex % 3 ? null : faker.datatype.number({\n      min: 0,\n      max: 1,\n      precision: 0.01\n    }),\n    status: sample(['Unfinished', 'Finished', '', ''])\n  };\n});\nexport default products;","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/_mocks_/TipodeTesting.js"],"names":["faker","sample","mockImgProduct","PRODUCT_NAME","PRODUCT_COLOR","products","Array","map","_","index","setIndex","id","datatype","uuid","cover","name","price","number","min","max","precision","priceSale","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;;AACA,SAASC,cAAT,QAA+B,qBAA/B,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CAAC,cAAD,EAAiB,eAAjB,EAAkC,YAAlC,CAArB;AACA,MAAMC,aAAa,GAAG,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB,EAMpB,SANoB,EAOpB,SAPoB,EAQpB,SARoB,CAAtB,C,CAWA;;AAEA,MAAMC,QAAQ,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/C,QAAMC,QAAQ,GAAGD,KAAK,GAAG,CAAzB;AAEA,SAAO;AACLE,IAAAA,EAAE,EAAEX,KAAK,CAACY,QAAN,CAAeC,IAAf,EADC;AAELC,IAAAA,KAAK,EAAEZ,cAAc,CAACQ,QAAD,CAFhB;AAGLK,IAAAA,IAAI,EAAEZ,YAAY,CAACM,KAAD,CAHb;AAILO,IAAAA,KAAK,EAAEhB,KAAK,CAACY,QAAN,CAAeK,MAAf,CAAsB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE,EAAf;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAAtB,CAJF;AAKLC,IAAAA,SAAS,EAAEX,QAAQ,GAAG,CAAX,GAAe,IAAf,GAAsBV,KAAK,CAACY,QAAN,CAAeK,MAAf,CAAsB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE,CAAf;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAtB,CAL5B;AAMLE,IAAAA,MAAM,EAAErB,MAAM,CAAC,CAAC,YAAD,EAAe,UAAf,EAA2B,EAA3B,EAA+B,EAA/B,CAAD;AANT,GAAP;AAQD,CAXgB,CAAjB;AAaA,eAAeI,QAAf","sourcesContent":["import faker from 'faker';\nimport { sample } from 'lodash';\n// utils\nimport { mockImgProduct } from '../utils/mockImages';\n\n// ----------------------------------------------------------------------\n\nconst PRODUCT_NAME = ['Game Testing', 'Game Feedback', 'Bug Bounty'];\nconst PRODUCT_COLOR = [\n  '#00AB55',\n  '#000000',\n  '#FFFFFF',\n  '#FFC0CB',\n  '#FF4842',\n  '#1890FF',\n  '#94D82D',\n  '#FFC107'\n];\n\n// ----------------------------------------------------------------------\n\nconst products = [...Array(3)].map((_, index) => {\n  const setIndex = index + 1;\n\n  return {\n    id: faker.datatype.uuid(),\n    cover: mockImgProduct(setIndex),\n    name: PRODUCT_NAME[index],\n    price: faker.datatype.number({ min: 0, max: 99, precision: 0.01 }),\n    priceSale: setIndex % 3 ? null : faker.datatype.number({ min: 0, max: 1, precision: 0.01 }),\n    status: sample(['Unfinished', 'Finished', '', ''])\n  };\n});\n\nexport default products;\n"]},"metadata":{},"sourceType":"module"}