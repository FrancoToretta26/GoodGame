{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\OneDrive\\\\Documentos\\\\GitHub\\\\material-kit-react-main\\\\src\\\\components\\\\_dashboard\\\\blog\\\\BlogPostCard.js\";\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport messageCircleFill from '@iconify/icons-eva/message-circle-fill'; // material\n\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Link, Card, Grid, Avatar, Typography, CardContent } from '@mui/material'; // utils\n\nimport { fDate } from '../../../utils/formatTime';\nimport { fShortenNumber } from '../../../utils/formatNumber'; //\n\nimport SvgIconStyle from '../../SvgIconStyle'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardMediaStyle = styled('div')({\n  position: 'relative',\n  paddingTop: 'calc(100% * 3 / 4)'\n});\nconst TitleStyle = styled(Link)({\n  height: 44,\n  overflow: 'hidden',\n  WebkitLineClamp: 2,\n  display: '-webkit-box',\n  WebkitBoxOrient: 'vertical'\n});\nconst AvatarStyle = styled(Avatar)(({\n  theme\n}) => ({\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  left: theme.spacing(3),\n  bottom: theme.spacing(-2)\n}));\nconst InfoStyle = styled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'flex-end',\n  marginTop: theme.spacing(3),\n  color: theme.palette.text.disabled\n}));\nconst CoverImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n}); // ----------------------------------------------------------------------\n\nBlogPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  index: PropTypes.number\n};\nexport default function BlogPostCard({\n  post,\n  index\n}) {\n  const {\n    cover,\n    title,\n    view,\n    comment,\n    share,\n    author,\n    createdAt\n  } = post;\n  const latestPostLarge = index === 0;\n  const latestPost = index === 1 || index === 2;\n  const POST_INFO = [{\n    number: comment,\n    icon: messageCircleFill\n  }, {\n    number: view,\n    icon: eyeFill\n  }, {\n    number: share,\n    icon: shareFill\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: latestPostLarge ? 12 : 6,\n    md: latestPostLarge ? 6 : 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMediaStyle, {\n        sx: { ...((latestPostLarge || latestPost) && {\n            pt: 'calc(100% * 4 / 3)',\n            '&:after': {\n              top: 0,\n              content: \"''\",\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              bgcolor: theme => alpha(theme.palette.grey[900], 0.72)\n            }\n          }),\n          ...(latestPostLarge && {\n            pt: {\n              xs: 'calc(100% * 4 / 3)',\n              sm: 'calc(100% * 3 / 4.66)'\n            }\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(SvgIconStyle, {\n          color: \"paper\",\n          src: \"/static/icons/shape-avatar.svg\",\n          sx: {\n            width: 80,\n            height: 36,\n            zIndex: 9,\n            bottom: -15,\n            position: 'absolute',\n            ...((latestPostLarge || latestPost) && {\n              display: 'none'\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvatarStyle, {\n          alt: author.name,\n          src: author.avatarUrl,\n          sx: { ...((latestPostLarge || latestPost) && {\n              zIndex: 9,\n              top: 24,\n              left: 24,\n              width: 40,\n              height: 40\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CoverImgStyle, {\n          alt: title,\n          src: cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          pt: 4,\n          ...((latestPostLarge || latestPost) && {\n            bottom: 0,\n            width: '100%',\n            position: 'absolute'\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"caption\",\n          sx: {\n            color: 'text.disabled',\n            display: 'block'\n          },\n          children: fDate(createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TitleStyle, {\n          to: \"#\",\n          color: \"inherit\",\n          variant: \"subtitle2\",\n          underline: \"hover\",\n          component: RouterLink,\n          sx: { ...(latestPostLarge && {\n              typography: 'h5',\n              height: 60\n            }),\n            ...((latestPostLarge || latestPost) && {\n              color: 'common.white'\n            })\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoStyle, {\n          children: POST_INFO.map((info, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              ml: index === 0 ? 0 : 1.5,\n              ...((latestPostLarge || latestPost) && {\n                color: 'grey.500'\n              })\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: Icon,\n              icon: info.icon,\n              sx: {\n                width: 16,\n                height: 16,\n                mr: 0.5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: fShortenNumber(info.number)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c = BlogPostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostCard\");","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/components/_dashboard/blog/BlogPostCard.js"],"names":["PropTypes","Icon","eyeFill","Link","RouterLink","shareFill","messageCircleFill","alpha","styled","Box","Card","Grid","Avatar","Typography","CardContent","fDate","fShortenNumber","SvgIconStyle","CardMediaStyle","position","paddingTop","TitleStyle","height","overflow","WebkitLineClamp","display","WebkitBoxOrient","AvatarStyle","theme","zIndex","width","left","spacing","bottom","InfoStyle","flexWrap","justifyContent","marginTop","color","palette","text","disabled","CoverImgStyle","top","objectFit","BlogPostCard","propTypes","post","object","isRequired","index","number","cover","title","view","comment","share","author","createdAt","latestPostLarge","latestPost","POST_INFO","icon","pt","content","bgcolor","grey","xs","sm","name","avatarUrl","typography","map","info","alignItems","ml","mr"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport messageCircleFill from '@iconify/icons-eva/message-circle-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Link, Card, Grid, Avatar, Typography, CardContent } from '@mui/material';\n// utils\nimport { fDate } from '../../../utils/formatTime';\nimport { fShortenNumber } from '../../../utils/formatNumber';\n//\nimport SvgIconStyle from '../../SvgIconStyle';\n\n// ----------------------------------------------------------------------\n\nconst CardMediaStyle = styled('div')({\n  position: 'relative',\n  paddingTop: 'calc(100% * 3 / 4)'\n});\n\nconst TitleStyle = styled(Link)({\n  height: 44,\n  overflow: 'hidden',\n  WebkitLineClamp: 2,\n  display: '-webkit-box',\n  WebkitBoxOrient: 'vertical'\n});\n\nconst AvatarStyle = styled(Avatar)(({ theme }) => ({\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  left: theme.spacing(3),\n  bottom: theme.spacing(-2)\n}));\n\nconst InfoStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'flex-end',\n  marginTop: theme.spacing(3),\n  color: theme.palette.text.disabled\n}));\n\nconst CoverImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\n// ----------------------------------------------------------------------\n\nBlogPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  index: PropTypes.number\n};\n\nexport default function BlogPostCard({ post, index }) {\n  const { cover, title, view, comment, share, author, createdAt } = post;\n  const latestPostLarge = index === 0;\n  const latestPost = index === 1 || index === 2;\n\n  const POST_INFO = [\n    { number: comment, icon: messageCircleFill },\n    { number: view, icon: eyeFill },\n    { number: share, icon: shareFill }\n  ];\n\n  return (\n    <Grid item xs={12} sm={latestPostLarge ? 12 : 6} md={latestPostLarge ? 6 : 3}>\n      <Card sx={{ position: 'relative' }}>\n        <CardMediaStyle\n          sx={{\n            ...((latestPostLarge || latestPost) && {\n              pt: 'calc(100% * 4 / 3)',\n              '&:after': {\n                top: 0,\n                content: \"''\",\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\n              }\n            }),\n            ...(latestPostLarge && {\n              pt: {\n                xs: 'calc(100% * 4 / 3)',\n                sm: 'calc(100% * 3 / 4.66)'\n              }\n            })\n          }}\n        >\n          <SvgIconStyle\n            color=\"paper\"\n            src=\"/static/icons/shape-avatar.svg\"\n            sx={{\n              width: 80,\n              height: 36,\n              zIndex: 9,\n              bottom: -15,\n              position: 'absolute',\n              ...((latestPostLarge || latestPost) && { display: 'none' })\n            }}\n          />\n          <AvatarStyle\n            alt={author.name}\n            src={author.avatarUrl}\n            sx={{\n              ...((latestPostLarge || latestPost) && {\n                zIndex: 9,\n                top: 24,\n                left: 24,\n                width: 40,\n                height: 40\n              })\n            }}\n          />\n\n          <CoverImgStyle alt={title} src={cover} />\n        </CardMediaStyle>\n\n        <CardContent\n          sx={{\n            pt: 4,\n            ...((latestPostLarge || latestPost) && {\n              bottom: 0,\n              width: '100%',\n              position: 'absolute'\n            })\n          }}\n        >\n          <Typography\n            gutterBottom\n            variant=\"caption\"\n            sx={{ color: 'text.disabled', display: 'block' }}\n          >\n            {fDate(createdAt)}\n          </Typography>\n\n          <TitleStyle\n            to=\"#\"\n            color=\"inherit\"\n            variant=\"subtitle2\"\n            underline=\"hover\"\n            component={RouterLink}\n            sx={{\n              ...(latestPostLarge && { typography: 'h5', height: 60 }),\n              ...((latestPostLarge || latestPost) && {\n                color: 'common.white'\n              })\n            }}\n          >\n            {title}\n          </TitleStyle>\n\n          <InfoStyle>\n            {POST_INFO.map((info, index) => (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  ml: index === 0 ? 0 : 1.5,\n                  ...((latestPostLarge || latestPost) && {\n                    color: 'grey.500'\n                  })\n                }}\n              >\n                <Box component={Icon} icon={info.icon} sx={{ width: 16, height: 16, mr: 0.5 }} />\n                <Typography variant=\"caption\">{fShortenNumber(info.number)}</Typography>\n              </Box>\n            ))}\n          </InfoStyle>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}