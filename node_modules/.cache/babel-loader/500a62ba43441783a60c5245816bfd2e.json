{"ast":null,"code":"import _toConsumableArray from\"C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import faker from'faker';import{sample}from'lodash';// utils\nimport{mockImgAvatar}from'../utils/mockImages';// ----------------------------------------------------------------------\nvar users=_toConsumableArray(Array(24)).map(function(_,index){return{id:faker.datatype.uuid(),avatarUrl:mockImgAvatar(index+1),name:faker.name.findName(),company:faker.company.companyName(),isVerified:faker.datatype.boolean(),status:sample(['Available','Not available']),role:sample(['Junior Tester','Semi-Senior Tester','Senior Tester'])};});export default users;","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/_mocks_/user.js"],"names":["faker","sample","mockImgAvatar","users","Array","map","_","index","id","datatype","uuid","avatarUrl","name","findName","company","companyName","isVerified","boolean","status","role"],"mappings":"gMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA;AACA,OAASC,aAAT,KAA8B,qBAA9B,CAEA;AAEA,GAAMC,CAAAA,KAAK,CAAG,mBAAIC,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,SAACC,CAAD,CAAIC,KAAJ,QAAe,CAC9CC,EAAE,CAAER,KAAK,CAACS,QAAN,CAAeC,IAAf,EAD0C,CAE9CC,SAAS,CAAET,aAAa,CAACK,KAAK,CAAG,CAAT,CAFsB,CAG9CK,IAAI,CAAEZ,KAAK,CAACY,IAAN,CAAWC,QAAX,EAHwC,CAI9CC,OAAO,CAAEd,KAAK,CAACc,OAAN,CAAcC,WAAd,EAJqC,CAK9CC,UAAU,CAAEhB,KAAK,CAACS,QAAN,CAAeQ,OAAf,EALkC,CAM9CC,MAAM,CAAEjB,MAAM,CAAC,CAAC,WAAD,CAAc,eAAd,CAAD,CANgC,CAO9CkB,IAAI,CAAElB,MAAM,CAAC,CAAC,eAAD,CAAkB,oBAAlB,CAAwC,eAAxC,CAAD,CAPkC,CAAf,EAAnB,CAAd,CAUA,cAAeE,CAAAA,KAAf","sourcesContent":["import faker from 'faker';\nimport { sample } from 'lodash';\n// utils\nimport { mockImgAvatar } from '../utils/mockImages';\n\n// ----------------------------------------------------------------------\n\nconst users = [...Array(24)].map((_, index) => ({\n  id: faker.datatype.uuid(),\n  avatarUrl: mockImgAvatar(index + 1),\n  name: faker.name.findName(),\n  company: faker.company.companyName(),\n  isVerified: faker.datatype.boolean(),\n  status: sample(['Available', 'Not available']),\n  role: sample(['Junior Tester', 'Semi-Senior Tester', 'Senior Tester'])\n}));\n\nexport default users;\n"]},"metadata":{},"sourceType":"module"}