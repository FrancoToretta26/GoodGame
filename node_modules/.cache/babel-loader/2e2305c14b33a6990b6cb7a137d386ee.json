{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\OneDrive\\\\Documentos\\\\GitHub\\\\material-kit-react-main\\\\src\\\\components\\\\_dashboard\\\\app\\\\AppOrderTimeline.js\";\nimport faker from 'faker';\nimport PropTypes from 'prop-types'; // material\n\nimport { Card, Typography, CardHeader, CardContent } from '@mui/material';\nimport { Timeline, TimelineItem, TimelineContent, TimelineConnector, TimelineSeparator, TimelineDot } from '@mui/lab'; // utils\n\nimport { fDateTime } from '../../../utils/formatTime'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TIMELINES = [{\n  title: '1983, orders, $4220',\n  time: faker.date.past(),\n  type: 'order1'\n}, {\n  title: '12 Invoices have been paid',\n  time: faker.date.past(),\n  type: 'order2'\n}, {\n  title: 'Order #37745 from September',\n  time: faker.date.past(),\n  type: 'order3'\n}, {\n  title: 'New order placed #XF-2356',\n  time: faker.date.past(),\n  type: 'order4'\n}, {\n  title: 'New order placed #XF-2346',\n  time: faker.date.past(),\n  type: 'order5'\n}]; // ----------------------------------------------------------------------\n\nOrderItem.propTypes = {\n  item: PropTypes.object,\n  isLast: PropTypes.bool\n};\n\nfunction OrderItem({\n  item,\n  isLast\n}) {\n  const {\n    type,\n    title,\n    time\n  } = item;\n  return /*#__PURE__*/_jsxDEV(TimelineItem, {\n    children: [/*#__PURE__*/_jsxDEV(TimelineSeparator, {\n      children: [/*#__PURE__*/_jsxDEV(TimelineDot, {\n        sx: {\n          bgcolor: type === 'order1' && 'primary.main' || type === 'order2' && 'success.main' || type === 'order3' && 'info.main' || type === 'order4' && 'warning.main' || 'error.main'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), isLast ? null : /*#__PURE__*/_jsxDEV(TimelineConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: fDateTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c = OrderItem;\nexport default function AppOrderTimeline() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      '& .MuiTimelineItem-missingOppositeContent:before': {\n        display: 'none'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Order Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Timeline, {\n        children: TIMELINES.map((item, index) => /*#__PURE__*/_jsxDEV(OrderItem, {\n          item: item,\n          isLast: index === TIMELINES.length - 1\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppOrderTimeline;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderItem\");\n$RefreshReg$(_c2, \"AppOrderTimeline\");","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/components/_dashboard/app/AppOrderTimeline.js"],"names":["faker","PropTypes","Card","Typography","CardHeader","CardContent","Timeline","TimelineItem","TimelineContent","TimelineConnector","TimelineSeparator","TimelineDot","fDateTime","TIMELINES","title","time","date","past","type","OrderItem","propTypes","item","object","isLast","bool","bgcolor","color","AppOrderTimeline","display","map","index","length"],"mappings":"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","sourcesContent":["import faker from 'faker';\nimport PropTypes from 'prop-types';\n// material\nimport { Card, Typography, CardHeader, CardContent } from '@mui/material';\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineContent,\n  TimelineConnector,\n  TimelineSeparator,\n  TimelineDot\n} from '@mui/lab';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\n\n// ----------------------------------------------------------------------\n\nconst TIMELINES = [\n  {\n    title: '1983, orders, $4220',\n    time: faker.date.past(),\n    type: 'order1'\n  },\n  {\n    title: '12 Invoices have been paid',\n    time: faker.date.past(),\n    type: 'order2'\n  },\n  {\n    title: 'Order #37745 from September',\n    time: faker.date.past(),\n    type: 'order3'\n  },\n  {\n    title: 'New order placed #XF-2356',\n    time: faker.date.past(),\n    type: 'order4'\n  },\n  {\n    title: 'New order placed #XF-2346',\n    time: faker.date.past(),\n    type: 'order5'\n  }\n];\n\n// ----------------------------------------------------------------------\n\nOrderItem.propTypes = {\n  item: PropTypes.object,\n  isLast: PropTypes.bool\n};\n\nfunction OrderItem({ item, isLast }) {\n  const { type, title, time } = item;\n  return (\n    <TimelineItem>\n      <TimelineSeparator>\n        <TimelineDot\n          sx={{\n            bgcolor:\n              (type === 'order1' && 'primary.main') ||\n              (type === 'order2' && 'success.main') ||\n              (type === 'order3' && 'info.main') ||\n              (type === 'order4' && 'warning.main') ||\n              'error.main'\n          }}\n        />\n        {isLast ? null : <TimelineConnector />}\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography variant=\"subtitle2\">{title}</Typography>\n        <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n          {fDateTime(time)}\n        </Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n}\n\nexport default function AppOrderTimeline() {\n  return (\n    <Card\n      sx={{\n        '& .MuiTimelineItem-missingOppositeContent:before': {\n          display: 'none'\n        }\n      }}\n    >\n      <CardHeader title=\"Order Timeline\" />\n      <CardContent>\n        <Timeline>\n          {TIMELINES.map((item, index) => (\n            <OrderItem key={item.title} item={item} isLast={index === TIMELINES.length - 1} />\n          ))}\n        </Timeline>\n      </CardContent>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}