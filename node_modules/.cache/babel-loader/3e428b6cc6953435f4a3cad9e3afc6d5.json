{"ast":null,"code":"import _objectSpread from\"C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import{useState}from'react';import{Link as RouterLink,useNavigate}from'react-router-dom';import{useFormik,Form,FormikProvider}from'formik';import{Icon}from'@iconify/react';import eyeFill from'@iconify/icons-eva/eye-fill';import eyeOffFill from'@iconify/icons-eva/eye-off-fill';// material\nimport{Link,Stack,Checkbox,TextField,IconButton,InputAdornment,FormControlLabel}from'@mui/material';import{LoadingButton}from'@mui/lab';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginForm(){var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var LoginSchema=Yup.object().shape({email:Yup.string().email('Email must be a valid email address').required('Email is required'),password:Yup.string().required('Password is required')});var formik=useFormik({initialValues:{email:'',password:'',remember:true},validationSchema:LoginSchema,onSubmit:function onSubmit(){navigate('/dashboard',{replace:true});}});var errors=formik.errors,touched=formik.touched,values=formik.values,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;var handleShowPassword=function handleShowPassword(){setShowPassword(function(show){return!show;});};return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsxs(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"username\",type:\"email\",label:\"Email address\"},getFieldProps('email')),{},{error:Boolean(touched.email&&errors.email),helperText:touched.email&&errors.email})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"current-password\",type:showPassword?'text':'password',label:\"Password\"},getFieldProps('password')),{},{InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleShowPassword,edge:\"end\",children:/*#__PURE__*/_jsx(Icon,{icon:showPassword?eyeFill:eyeOffFill})})})},error:Boolean(touched.password&&errors.password),helperText:touched.password&&errors.password}))]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",sx:{my:2},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},getFieldProps('remember')),{},{checked:values.remember})),label:\"Remember me\"}),/*#__PURE__*/_jsx(Link,{component:RouterLink,variant:\"subtitle2\",to:\"#\",children:\"Forgot password?\"})]}),/*#__PURE__*/_jsx(LoadingButton,{fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Login\"})]})});}","map":{"version":3,"sources":["C:/Users/franc/OneDrive/Documentos/GitHub/material-kit-react-main/src/components/authentication/login/LoginForm.js"],"names":["Yup","useState","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","LoginForm","navigate","showPassword","setShowPassword","LoginSchema","object","shape","email","string","required","password","formik","initialValues","remember","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","Boolean","endAdornment","my"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport {\n  Link,\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: () => {\n      navigate('/dashboard', { replace: true });\n    }\n  });\n\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n          <FormControlLabel\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\n            label=\"Remember me\"\n          />\n\n          <Link component={RouterLink} variant=\"subtitle2\" to=\"#\">\n            Forgot password?\n          </Link>\n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Login\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}